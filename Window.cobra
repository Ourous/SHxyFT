use System.Windows.Forms
use System.Drawing
use System.ComponentModel
use System.Text.RegularExpressions

class Window inherits Form is partial
	"""
	UI
	"""
	#TODO add better description

	var __verifiedComparisonColorValues = @[255u8, 0u8, 0u8, 0u8]
	var __verifiedIndexType = 'Luminance'
	var __verifiedSortAngle = 0f
	var __verifiedMinRange = 0f
	var __verifiedMaxRange = 255f


	var __uxHelp as ToolTip
	var __uxPreview as PictureBox
	var __uxLayoutLv1 as TableLayoutPanel
	var __uxLayoutLv2 as TableLayoutPanel
	var __uxLayoutColorDiff as TableLayoutPanel
	var __uxSave as Button
	var __uxOpen as Button
	var __uxRenderOrCancel as Button
	var __uxUndo as Button
	var __uxRedo as Button
	var __uxRenderProgress as ProgressBar
	var __raIndexType as ComboBox
	var __raSortAngle as TextBox
	var __raMinSortRange as TextBox
	var __raMaxSortRange as TextBox
	var __raColorDiffAlpha as TextBox
	var __raColorDiffRed as TextBox
	var __raColorDiffGreen as TextBox
	var __raColorDiffBlue as TextBox

	event __SavePrompt as Action
	event __OpenPrompt as Action

	cue init

		base.init

		.text = 'SH(x,y)FT'

		#set minimum size to something sensible
		.minimumSize = Size(800,600)

		# hover-over help text for the window
		__uxHelp = ToolTip()

		#first layout level, contains:
		# * Side menu
		# * Preview pane
		__uxLayoutLv1 = TableLayoutPanel(
			parent=this,
			dock=DockStyle.Fill,
			columnCount=2,
			rowCount=1
			)
		
		__uxLayoutLv1.columnStyles.addRange([
			ColumnStyle(SizeType.AutoSize),
			ColumnStyle(SizeType.Percent, 1)
			])

		__uxLayoutLv1.rowStyles.addRange([
			RowStyle(SizeType.AutoSize)
			])

		#second layout level, handles side menu
		__uxLayoutLv2 = TableLayoutPanel(
			parent=__uxLayoutLv1,
			anchor=AnchorStyles( Bottom, Top, Left ),
			dock=DockStyle.Fill,
			columnCount=2,
			rowCount=7,
			width=200
			)

		__uxLayoutLv2.columnStyles.addRange([
			ColumnStyle(SizeType.Percent, 1),
			ColumnStyle(SizeType.Percent, 1)
			])

		__uxLayoutLv2.rowStyles.addRange([
			RowStyle(), #1
			RowStyle(), #2
			RowStyle(), #3
			RowStyle(), #4
			RowStyle(), #5
			RowStyle(), #6
			RowStyle()  #7
			])

		#preview pane for the current render
		__uxPreview = PictureBox(
			parent=__uxLayoutLv1,
			dock=DockStyle.Fill,
			image=Bitmap(1,1) # avoid nil problems
			)

		#file open button
		__uxOpen = Button(
			parent=__uxLayoutLv2,
			text='Open',
			dock=DockStyle.Fill
			)

		#file save button
		__uxSave = Button(
			parent=__uxLayoutLv2,
			text='Save',
			dock=DockStyle.Fill
			)

		#undo button
		__uxUndo = Button(
			parent=__uxLayoutLv2,
			text='Undo',
			dock=DockStyle.Fill
			)

		#redo button
		__uxRedo = Button(
			parent=__uxLayoutLv2,
			text='Redo',
			dock=DockStyle.Fill
			)

		#degree box, specifies the angle of the sort
		__raSortAngle = TextBox(
			parent=__uxLayoutLv2,
			text='0.0',
			dock=DockStyle.Fill
			)

		#drop-down selector for the index type to be sorted
		__raIndexType = ComboBox(
			parent=__uxLayoutLv2,
			dropDownStyle=ComboBoxStyle.DropDownList,
			dock=DockStyle.Fill
			)

		#options for the index type selector
		__raIndexType.items.addRange(@[
			'Alpha', 'Red', 'Green', 'Blue', 'Cyan', 'Magenta', 'Yellow', 'K-Value', 'Hue', 'Saturation', 'Value', 'Color Diff', 'Luminance'
			])

		#start the index selector with the most 
		__raIndexType.selectedItem = 'Luminance'

		__uxLayoutColorDiff = TableLayoutPanel(
			parent=__uxLayoutLv2,
			columnCount=4,
			rowCount=1,
			dock=DockStyle.Fill,
			enabled=false,
			padding=Padding(0),
			autoSize=true,
			backColor=Color.black
			)

		__uxLayoutColorDiff.columnStyles.addRange(@[
			ColumnStyle(SizeType.Percent, 1),
			ColumnStyle(SizeType.Percent, 1),
			ColumnStyle(SizeType.Percent, 1),
			ColumnStyle(SizeType.Percent, 1)
			])

		__uxLayoutColorDiff.rowStyles.addRange(@[
			RowStyle(SizeType.AutoSize)
			])

		__uxLayoutLv2.setColumnSpan(__uxLayoutColorDiff, 2)

		__raColorDiffAlpha = TextBox(
			parent=__uxLayoutColorDiff,
			tag=0,
			dock=DockStyle.Fill,
			text='255'
			)

		__raColorDiffRed = TextBox(
			parent=__uxLayoutColorDiff,
			tag=1,
			dock=DockStyle.Fill,
			text='0'
			)

		__raColorDiffGreen = TextBox(
			parent=__uxLayoutColorDiff,
			tag=2,
			dock=DockStyle.Fill,
			text='0'
			)

		__raColorDiffBlue = TextBox(
			parent=__uxLayoutColorDiff,
			tag=3,
			dock=DockStyle.Fill,
			text='0'
			)

		#min value box for sort
		__raMinSortRange = TextBox(
			parent=__uxLayoutLv2,
			text='0',
			dock=DockStyle.Fill
			)

		#max value box for sort
		__raMaxSortRange = TextBox(
			parent=__uxLayoutLv2,
			text='255',
			dock=DockStyle.Fill
			)

		#render button, also handles render cancelling
		__uxRenderOrCancel = Button(
			parent=__uxLayoutLv2,
			text='Render',
			dock=DockStyle.Fill
			)

		#progress bar for renders
		__uxRenderProgress = ProgressBar(
			parent=__uxLayoutLv2,
			minimum=0,
			maximum=100,
			dock=DockStyle.Fill
			)


		#TODO move this into WindowHandlers.cobra


		__setupHelpText

		__setupControlHandlers

		__setupKeyHandlers